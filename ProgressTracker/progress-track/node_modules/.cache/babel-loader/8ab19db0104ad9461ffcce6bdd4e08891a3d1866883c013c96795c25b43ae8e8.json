{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alaan\\\\source\\\\repos\\\\ASharif23\\\\MacroMaster\\\\ProgressTracker\\\\progress-track\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { getUserProgress, updateUserProgress } from './api';\nimport ProgressChart from './components/ProgressChart';\nimport ProgressForm from './components/ProgressForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [progressData, setProgressData] = useState([]);\n  // Replace 'YOUR_USER_ID_FROM_CONTEXT' with the user ID from your authentication context or state.\n  const userId = 'YOUR_USER_ID_FROM_CONTEXT';\n  useEffect(() => {\n    getUserProgress(userId).then(response => {\n      setProgressData(response.data);\n    }).catch(error => {\n      console.error('Error fetching progress data:', error);\n    });\n  }, [userId]);\n  const handleProgressUpdate = newWeight => {\n    updateUserProgress(userId, {\n      weight: newWeight\n    }).then(response => {\n      // Handle the successful update\n      alert('Progress updated successfully!');\n      setProgressData(response.data); // Assuming the response includes the updated data\n    }).catch(error => {\n      // Handle any errors\n      console.error('Failed to update progress:', error);\n      alert('Failed to update progress.');\n    });\n  };\n  const chartData = {\n    labels: progressData.map(entry => entry.date),\n    // Ensure 'date' is in your data\n    datasets: [{\n      label: 'Weight Progress',\n      data: progressData.map(entry => entry.currentWeight),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      gutterBottom: true,\n      component: \"div\",\n      children: \"MacroMaster Progress Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ProgressChart, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ProgressForm, {\n          onSubmit: handleProgressUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HRGEHVg3lUFKad2Ryw5s3BGVtOk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Grid","Typography","getUserProgress","updateUserProgress","ProgressChart","ProgressForm","jsxDEV","_jsxDEV","App","_s","progressData","setProgressData","userId","then","response","data","catch","error","console","handleProgressUpdate","newWeight","weight","alert","chartData","labels","map","entry","date","datasets","label","currentWeight","fill","borderColor","tension","children","variant","gutterBottom","component","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/alaan/source/repos/ASharif23/MacroMaster/ProgressTracker/progress-track/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { getUserProgress, updateUserProgress } from './api';\nimport ProgressChart from './components/ProgressChart';\nimport ProgressForm from './components/ProgressForm';\n\nfunction App() {\n  const [progressData, setProgressData] = useState([]);\n  // Replace 'YOUR_USER_ID_FROM_CONTEXT' with the user ID from your authentication context or state.\n  const userId = 'YOUR_USER_ID_FROM_CONTEXT';\n\n  useEffect(() => {\n    getUserProgress(userId)\n      .then((response) => {\n        setProgressData(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching progress data:', error);\n      });\n  }, [userId]);\n\n  const handleProgressUpdate = (newWeight) => {\n    updateUserProgress(userId, { weight: newWeight })\n      .then((response) => {\n        // Handle the successful update\n        alert('Progress updated successfully!');\n        setProgressData(response.data); // Assuming the response includes the updated data\n      })\n      .catch((error) => {\n        // Handle any errors\n        console.error('Failed to update progress:', error);\n        alert('Failed to update progress.');\n      });\n  };\n\n  const chartData = {\n    labels: progressData.map(entry => entry.date), // Ensure 'date' is in your data\n    datasets: [{\n      label: 'Weight Progress',\n      data: progressData.map(entry => entry.currentWeight),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\" gutterBottom component=\"div\">\n        MacroMaster Progress Tracker\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <ProgressChart data={chartData} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <ProgressForm onSubmit={handleProgressUpdate} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}