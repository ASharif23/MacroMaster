{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alaan\\\\source\\\\repos\\\\ASharif23\\\\MacroMaster\\\\ProgressTracker\\\\progress-track\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { getUserProgress, updateUserProgress } from './api';\nimport ProgressChart from './components/ProgressChart';\nimport ProgressForm from './components/ProgressForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [progressData, setProgressData] = useState([]);\n  // Replace the string below with the actual user ID from your auth system or context.\n  const [userId, setUserId] = useState('actual_user_id_retrieved_from_context');\n  useEffect(() => {\n    if (userId) {\n      getUserProgress(userId).then(response => {\n        setProgressData(response.data);\n      }).catch(error => {\n        console.error('Error fetching progress data:', error);\n        alert(`Error fetching progress data: ${error.message}`);\n      });\n    }\n  }, [userId]);\n  const handleProgressUpdate = newWeight => {\n    if (userId) {\n      updateUserProgress(userId, {\n        weight: newWeight\n      }).then(response => {\n        // Assuming the response includes the updated data\n        setProgressData(response.data);\n        alert('Progress updated successfully!');\n      }).catch(error => {\n        var _error$response, _error$response$data;\n        console.error('Failed to update progress:', error);\n        alert(`Failed to update progress: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`);\n      });\n    } else {\n      alert('User ID is not set. Cannot update progress.');\n    }\n  };\n\n  // Prepare chart data based on progressData\n  // This needs to be updated according to the actual data structure of progressData\n  const chartData = {\n    labels: progressData.map((entry, index) => index),\n    // Replace index with actual date or label\n    datasets: [{\n      label: 'Weight Progress',\n      data: progressData.map(entry => entry.weight),\n      // Adjust if your data property is different\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      gutterBottom: true,\n      component: \"div\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"MacroMaster Progress Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ProgressChart, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(ProgressForm, {\n          onSubmit: handleProgressUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tfblKLswfQtqXyqJ+Fh1Ero5jJI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Container","Grid","Typography","getUserProgress","updateUserProgress","ProgressChart","ProgressForm","jsxDEV","_jsxDEV","App","_s","progressData","setProgressData","userId","setUserId","then","response","data","catch","error","console","alert","message","handleProgressUpdate","newWeight","weight","_error$response","_error$response$data","chartData","labels","map","entry","index","datasets","label","fill","borderColor","tension","children","variant","gutterBottom","component","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/alaan/source/repos/ASharif23/MacroMaster/ProgressTracker/progress-track/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { getUserProgress, updateUserProgress } from './api';\nimport ProgressChart from './components/ProgressChart';\nimport ProgressForm from './components/ProgressForm';\n\nfunction App() {\n  const [progressData, setProgressData] = useState([]);\n  // Replace the string below with the actual user ID from your auth system or context.\n  const [userId, setUserId] = useState('actual_user_id_retrieved_from_context');\n\n  useEffect(() => {\n    if (userId) {\n      getUserProgress(userId)\n        .then((response) => {\n          setProgressData(response.data);\n        })\n        .catch((error) => {\n          console.error('Error fetching progress data:', error);\n          alert(`Error fetching progress data: ${error.message}`);\n        });\n    }\n  }, [userId]);\n\n  const handleProgressUpdate = (newWeight) => {\n    if (userId) {\n      updateUserProgress(userId, { weight: newWeight })\n        .then((response) => {\n          // Assuming the response includes the updated data\n          setProgressData(response.data);\n          alert('Progress updated successfully!');\n        })\n        .catch((error) => {\n          console.error('Failed to update progress:', error);\n          alert(`Failed to update progress: ${error.response?.data?.message || error.message}`);\n        });\n    } else {\n      alert('User ID is not set. Cannot update progress.');\n    }\n  };\n\n  // Prepare chart data based on progressData\n  // This needs to be updated according to the actual data structure of progressData\n  const chartData = {\n    labels: progressData.map((entry, index) => index), // Replace index with actual date or label\n    datasets: [\n      {\n        label: 'Weight Progress',\n        data: progressData.map(entry => entry.weight), // Adjust if your data property is different\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h2\" gutterBottom component=\"div\" style={{ margin: '20px 0' }}>\n        MacroMaster Progress Tracker\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <ProgressChart data={chartData} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <ProgressForm onSubmit={handleProgressUpdate} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}